{"ast":null,"code":"var _jsxFileName = \"/Users/markporo/Desktop/L/Unit-4/BUILD-WEEK/water-my-plant-app2/src/components/PrivateRoute.js\";\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router\"; // this is going to a few things\n// 1. wrap the plain Route component and pass the props through\n// 2. check to see if the user is logged in, if yes, render component\n// 3. if user is not logged in, we redirect to login\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = _ref => {\n  let {\n    component: Component,\n    ...rest\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => {\n      if (localStorage.getItem('token')) {\n        return /*#__PURE__*/_jsxDEV(Component, { ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 24\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 24\n        }, this);\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 13\n  }, this);\n};\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/Users/markporo/Desktop/L/Unit-4/BUILD-WEEK/water-my-plant-app2/src/components/PrivateRoute.js"],"names":["React","Route","Redirect","PrivateRoute","component","Component","rest","props","localStorage","getItem"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,cAAhC,C,CAEA;AACA;AACA;AACA;;;;AAEA,MAAMC,YAAY,GAAG,QAAuC;AAAA,MAAtC;AAAEC,IAAAA,SAAS,EAAEC,SAAb;AAAwB,OAAGC;AAA3B,GAAsC;AACxD,sBAAQ,QAAC,KAAD,OAAWA,IAAX;AAAiB,IAAA,MAAM,EAC1BC,KAAD,IAAW;AACP,UAAIC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAJ,EAAmC;AAC/B,4BAAO,QAAC,SAAD,OAAeF;AAAf;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAFD,MAEO;AACH,4BAAO,QAAC,QAAD;AAAU,UAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH;AACJ;AAPG;AAAA;AAAA;AAAA;AAAA,UAAR;AASH,CAVD;;KAAMJ,Y;AAYN,eAAeA,YAAf","sourcesContent":["import React from \"react\";\nimport { Route, Redirect } from \"react-router\";\n\n// this is going to a few things\n// 1. wrap the plain Route component and pass the props through\n// 2. check to see if the user is logged in, if yes, render component\n// 3. if user is not logged in, we redirect to login\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n    return (<Route {...rest} render={\n        (props) => {\n            if (localStorage.getItem('token')) {\n                return <Component {...props} />\n            } else {\n                return <Redirect to='/login' />\n            }\n        }\n    } />)\n}\n\nexport default PrivateRoute"]},"metadata":{},"sourceType":"module"}