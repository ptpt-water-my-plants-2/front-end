{"ast":null,"code":"var _jsxFileName = \"/Users/markporo/Desktop/L/Unit-4/BUILD-WEEK/water-my-plant-app2/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useState } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Login from './components/signuplogins/login';\nimport Signup from './components/signupslogins/signup';\nimport NavBar from './components/Navbars/navbar';\nimport Home from './components/Home';\nimport PrivateRoute from './components/PrivateRoute';\nimport { GlobalPropsContext } from './components/GlobalPropsContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialFakePlantData = [{\n  'plantId': 1,\n  'nickname': 'Corny',\n  'species': 'Corn Plant',\n  'h20Frequency': 10,\n  'howMuchWater': '1/4 cup',\n  'image': ''\n}, {\n  'plantId': 2,\n  'nickname': 'Spidy',\n  'species': 'Spider Plant',\n  'h20Frequency': 7,\n  'howMuchWater': '2 cups',\n  'image': ''\n}, {\n  'plantId': 3,\n  'nickname': 'Orchid',\n  'species': 'Orchid Species',\n  'h20Frequency': 7,\n  'howMuchWater': '1/4 cup',\n  'image': ''\n}];\n\nfunction App() {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(true);\n  const [user, setUser] = useState(true);\n  const [usersPlants, setUsersPlants] = useState(initialFakePlantData); // seed soon from backend\n  //const [isFetchingPlants, setIsFetchingPlants] = useState(false);\n  //*******will be used once api is ready for getting classes******\n  // const client = axios.create({\n  //   baseURL: \"https://reqres.in\"\n  // });\n  // useEffect(() => {\n  //   async function getAllPlants() {\n  //     setIsFetchingPlants(true);\n  //     try {\n  //       const res = await client.get(\"/api/unknown\");\n  //       //setAllPlants(res.data);\n  //     }\n  //     catch (err) {\n  //       console.log(\"error: \", err);\n  //     }\n  //     setIsFetchingPlants(false);\n  //   }\n  //   getAllPlants();\n  // }, [])\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(GlobalPropsContext.Provider, {\n        value: {\n          isLoggedIn,\n          setIsLoggedIn,\n          user,\n          setUser,\n          usersPlants\n        },\n        children: /*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"bTAlKS979dMXmXGLUX14/LllIv8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/markporo/Desktop/L/Unit-4/BUILD-WEEK/water-my-plant-app2/src/App.js"],"names":["useState","Route","Switch","BrowserRouter","Router","Login","Signup","NavBar","Home","PrivateRoute","GlobalPropsContext","initialFakePlantData","App","isLoggedIn","setIsLoggedIn","user","setUser","usersPlants","setUsersPlants"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,SAASC,aAAa,IAAIC,MAA1B,QAAwC,kBAAxC;AAGA,OAAOC,KAAP,MAAkB,iCAAlB;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,SAASC,kBAAT,QAAmC,iCAAnC;;AAGA,MAAMC,oBAAoB,GAAG,CAC3B;AACE,aAAW,CADb;AAEE,cAAY,OAFd;AAGE,aAAW,YAHb;AAIE,kBAAgB,EAJlB;AAKE,kBAAgB,SALlB;AAME,WAAS;AANX,CAD2B,EAS3B;AACE,aAAW,CADb;AAEE,cAAY,OAFd;AAGE,aAAW,cAHb;AAIE,kBAAgB,CAJlB;AAKE,kBAAgB,QALlB;AAME,WAAS;AANX,CAT2B,EAiB3B;AACE,aAAW,CADb;AAEE,cAAY,QAFd;AAGE,aAAW,gBAHb;AAIE,kBAAgB,CAJlB;AAKE,kBAAgB,SALlB;AAME,WAAS;AANX,CAjB2B,CAA7B;;AA4BA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8Bd,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM,CAACe,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACiB,WAAD,EAAcC,cAAd,IAAgClB,QAAQ,CAACW,oBAAD,CAA9C,CAHa,CAG0D;AACvE;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAGA,sBAEE,QAAC,MAAD;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE,QAAC,kBAAD,CAAoB,QAApB;AAA6B,QAAA,KAAK,EAAE;AAAEE,UAAAA,UAAF;AAAcC,UAAAA,aAAd;AAA6BC,UAAAA,IAA7B;AAAmCC,UAAAA,OAAnC;AAA4CC,UAAAA;AAA5C,SAApC;AAAA,+BAEE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UAFF;AAoBD;;GAlDQL,G;;KAAAA,G;AAoDT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport { useState } from \"react\"\nimport { Route, Switch } from \"react-router-dom\"\nimport { BrowserRouter as Router } from \"react-router-dom\"\n\n\nimport Login from './components/signuplogins/login';\nimport Signup from './components/signupslogins/signup'\nimport NavBar from './components/Navbars/navbar';\nimport Home from './components/Home'\nimport PrivateRoute from './components/PrivateRoute'\nimport { GlobalPropsContext } from './components/GlobalPropsContext';\n\n\nconst initialFakePlantData = [\n  {\n    'plantId': 1,\n    'nickname': 'Corny',\n    'species': 'Corn Plant',\n    'h20Frequency': 10,\n    'howMuchWater': '1/4 cup',\n    'image': ''\n  },\n  {\n    'plantId': 2,\n    'nickname': 'Spidy',\n    'species': 'Spider Plant',\n    'h20Frequency': 7,\n    'howMuchWater': '2 cups',\n    'image': ''\n  },\n  {\n    'plantId': 3,\n    'nickname': 'Orchid',\n    'species': 'Orchid Species',\n    'h20Frequency': 7,\n    'howMuchWater': '1/4 cup',\n    'image': ''\n  },\n]\n\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(true);\n  const [user, setUser] = useState(true);\n  const [usersPlants, setUsersPlants] = useState(initialFakePlantData);  // seed soon from backend\n  //const [isFetchingPlants, setIsFetchingPlants] = useState(false);\n\n  //*******will be used once api is ready for getting classes******\n  // const client = axios.create({\n  //   baseURL: \"https://reqres.in\"\n  // });\n\n  // useEffect(() => {\n  //   async function getAllPlants() {\n  //     setIsFetchingPlants(true);\n\n  //     try {\n  //       const res = await client.get(\"/api/unknown\");\n  //       //setAllPlants(res.data);\n\n  //     }\n  //     catch (err) {\n  //       console.log(\"error: \", err);\n  //     }\n\n  //     setIsFetchingPlants(false);\n  //   }\n  //   getAllPlants();\n  // }, [])\n\n\n  return (\n\n    <Router>\n      <div className=\"App\">\n        <GlobalPropsContext.Provider value={{ isLoggedIn, setIsLoggedIn, user, setUser, usersPlants }}>\n\n          <NavBar />\n          {/* <Switch>\n            <Route exact path=\"/signup\"><Signup /></Route>\n\n            <Route exact path=\"/login\"><Login /></Route>\n\n            <PrivateRoute exact path=\"/\" component={Home} />\n          </Switch> */}\n\n        </GlobalPropsContext.Provider>\n      </div>\n    </Router>\n\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}