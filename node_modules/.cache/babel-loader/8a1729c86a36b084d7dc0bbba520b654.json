{"ast":null,"code":"var _jsxFileName = \"/Users/markporo/Desktop/L/Unit-4/BUILD-WEEK/water-my-plant-app2/src/components/Navbars/navbar.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useState, useEffect, useContext } from \"react\";\nimport \"../../App.css\";\nimport Hamburger from \"./Hamburger\";\nimport NavBarContents from \"./NavBarContents\";\nimport { GlobalPropsContext } from \"../GlobalPropsContext\"; // custom hook for getting window size\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction useWindowSize() {\n  _s();\n\n  const [width, setWidth] = useState([window.innerWidth]);\n  useEffect(() => {\n    const handleResize = () => {\n      setWidth([window.innerWidth]);\n    };\n\n    window.addEventListener(\"resize\", handleResize);\n  }, []);\n  return width;\n}\n\n_s(useWindowSize, \"+vvEQSuclb2GBIBYbWdccyy2X7w=\");\n\nexport default function NavBar() {\n  _s2();\n\n  const {\n    hamburgerState,\n    setHamburgerState\n  } = useContext(GlobalPropsContext);\n  const {\n    navState,\n    setNavState\n  } = useContext(GlobalPropsContext);\n  const [width] = useWindowSize();\n  useEffect(() => {\n    if (width > 525) {\n      setNavState(true);\n    }\n\n    if (width < 525) {\n      setNavState(false);\n      setHamburgerState(false);\n    }\n  }, [width]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"navBar\",\n    children: [/*#__PURE__*/_jsxDEV(Hamburger, {\n      hamburgerState: hamburgerState,\n      setHamburgerState: setHamburgerState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"titleOfApp\",\n      children: \"Anywhere Fitness\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), (navState || hamburgerState) && /*#__PURE__*/_jsxDEV(NavBarContents, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 46\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(NavBar, \"g/Cx5C9yWRHDzcl86ZSd2p6EAaE=\", false, function () {\n  return [useWindowSize];\n});\n\n_c = NavBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"sources":["/Users/markporo/Desktop/L/Unit-4/BUILD-WEEK/water-my-plant-app2/src/components/Navbars/navbar.js"],"names":["useState","useEffect","useContext","Hamburger","NavBarContents","GlobalPropsContext","useWindowSize","width","setWidth","window","innerWidth","handleResize","addEventListener","NavBar","hamburgerState","setHamburgerState","navState","setNavState"],"mappings":";;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,OAAO,eAAP;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,kBAAT,QAAmC,uBAAnC,C,CAEA;;;;AACA,SAASC,aAAT,GAAyB;AAAA;;AACrB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,CAACS,MAAM,CAACC,UAAR,CAAD,CAAlC;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMU,YAAY,GAAG,MAAM;AACvBH,MAAAA,QAAQ,CAAC,CAACC,MAAM,CAACC,UAAR,CAAD,CAAR;AACH,KAFD;;AAGAD,IAAAA,MAAM,CAACG,gBAAP,CAAwB,QAAxB,EAAkCD,YAAlC;AACH,GALQ,EAKN,EALM,CAAT;AAOA,SAAOJ,KAAP;AAEH;;GAZQD,a;;AAcT,eAAe,SAASO,MAAT,GAAkB;AAAA;;AAC7B,QAAM;AAAEC,IAAAA,cAAF;AAAkBC,IAAAA;AAAlB,MAAwCb,UAAU,CAACG,kBAAD,CAAxD;AACA,QAAM;AAAEW,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA4Bf,UAAU,CAACG,kBAAD,CAA5C;AACA,QAAM,CAACE,KAAD,IAAUD,aAAa,EAA7B;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIM,KAAK,GAAG,GAAZ,EAAiB;AACbU,MAAAA,WAAW,CAAC,IAAD,CAAX;AACH;;AACD,QAAIV,KAAK,GAAG,GAAZ,EAAiB;AACbU,MAAAA,WAAW,CAAC,KAAD,CAAX;AACAF,MAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACH;AACJ,GARQ,EAQN,CAACR,KAAD,CARM,CAAT;AAUA,sBACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,4BACI,QAAC,SAAD;AAAW,MAAA,cAAc,EAAEO,cAA3B;AAA2C,MAAA,iBAAiB,EAAEC;AAA9D;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGK,CAACC,QAAQ,IAAIF,cAAb,kBAAgC,QAAE,cAAF;AAAA;AAAA;AAAA;AAAA,YAHrC;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;IAtBuBD,M;UAGJP,a;;;KAHIO,M","sourcesContent":["import { useState, useEffect, useContext } from \"react\";\nimport \"../../App.css\"\nimport Hamburger from \"./Hamburger\";\nimport NavBarContents from \"./NavBarContents\";\nimport { GlobalPropsContext } from \"../GlobalPropsContext\";\n\n// custom hook for getting window size\nfunction useWindowSize() {\n    const [width, setWidth] = useState([window.innerWidth]);\n\n    useEffect(() => {\n        const handleResize = () => {\n            setWidth([window.innerWidth])\n        }\n        window.addEventListener(\"resize\", handleResize);\n    }, [])\n\n    return width;\n\n}\n\nexport default function NavBar() {\n    const { hamburgerState, setHamburgerState } = useContext(GlobalPropsContext);\n    const { navState, setNavState } = useContext(GlobalPropsContext);\n    const [width] = useWindowSize();\n\n    useEffect(() => {\n        if (width > 525) {\n            setNavState(true);\n        }\n        if (width < 525) {\n            setNavState(false);\n            setHamburgerState(false);\n        }\n    }, [width])\n\n    return (\n        <div className=\"navBar\">\n            <Hamburger hamburgerState={hamburgerState} setHamburgerState={setHamburgerState} />\n            <h1 className=\"titleOfApp\">Anywhere Fitness</h1>\n            {(navState || hamburgerState) && < NavBarContents />}\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}