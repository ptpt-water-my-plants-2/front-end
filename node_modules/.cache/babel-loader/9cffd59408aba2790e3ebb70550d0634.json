{"ast":null,"code":"var _jsxFileName = \"/Users/markporo/Desktop/L/Unit-4/BUILD-WEEK/water-my-plant-app2/src/components/signuplogins/login.js\",\n    _s = $RefreshSig$();\n\n//1. User can create/register as a client and login with the registered credentials.\n// MARK\n//2. User can create/register as an instructor \n//by entering an additional Auth Code during signup, \n//and can login with the registered credentials.\nimport { useContext, useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { GlobalPropsContext } from '../GlobalPropsContext'; // Initial log in form values\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialLogInFormValues = {\n  username: \"\",\n  password: \"\"\n};\nexport default function Login() {\n  _s();\n\n  const [loginFormValues, setLogInFormValues] = useState(initialLogInFormValues);\n  const {\n    user,\n    setUser\n  } = useContext(GlobalPropsContext);\n  const [loginError, setLoginError] = useState(false);\n  let history = useHistory();\n\n  const onChange = e => {\n    setLogInFormValues({ ...loginFormValues,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const loginSubmitHandler = e => {\n    e.preventDefault(); // setIsLoading(true);\n    // console.log(isLoading);\n\n    if (user === true) {\n      if (loginFormValues.username !== \"lambda\" && loginFormValues.password !== \"school\") {\n        setLoginError(true);\n      } else {\n        setLoginError(false);\n        setIsLoggedIn(true);\n        history.push(\"/\");\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: loginSubmitHandler,\n      className: \"form\",\n      children: [user.instructor === true && /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"What's Up Coach!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 46\n      }, this), user.client === true && /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Let's Get Fit!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 42\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"username\",\n        name: \"username\",\n        label: \"username\",\n        type: \"text\",\n        id: \"username\",\n        onChange: onChange,\n        value: loginFormValues.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"password\",\n        name: \"password\",\n        label: \"Password\",\n        type: \"password\",\n        id: \"password\",\n        onChange: onChange,\n        value: loginFormValues.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"LogIn\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Login, \"GUXZ55/LWpWz6Ms82k08Y3hOAQA=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/markporo/Desktop/L/Unit-4/BUILD-WEEK/water-my-plant-app2/src/components/signuplogins/login.js"],"names":["useContext","useState","useEffect","useHistory","GlobalPropsContext","initialLogInFormValues","username","password","Login","loginFormValues","setLogInFormValues","user","setUser","loginError","setLoginError","history","onChange","e","target","name","value","loginSubmitHandler","preventDefault","setIsLoggedIn","push","instructor","client"],"mappings":";;;AAAA;AACA;AAEA;AACA;AACA;AACA,SAASA,UAAT,EAAqBC,QAArB,EAA+BC,SAA/B,QAAgD,OAAhD;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,kBAAT,QAAmC,uBAAnC,C,CAGA;;;AACA,MAAMC,sBAAsB,GAAG;AAAEC,EAAAA,QAAQ,EAAE,EAAZ;AAAgBC,EAAAA,QAAQ,EAAE;AAA1B,CAA/B;AAGA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAC5B,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCT,QAAQ,CAACI,sBAAD,CAAtD;AACA,QAAM;AAAEM,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBZ,UAAU,CAACI,kBAAD,CAApC;AACA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC,KAAD,CAA5C;AAEA,MAAIc,OAAO,GAAGZ,UAAU,EAAxB;;AAEA,QAAMa,QAAQ,GAAIC,CAAD,IAAO;AACpBP,IAAAA,kBAAkB,CAAC,EACf,GAAGD,eADY;AACK,OAACQ,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AAD/B,KAAD,CAAlB;AAGH,GAJD;;AAOA,QAAMC,kBAAkB,GAAIJ,CAAD,IAAO;AAC9BA,IAAAA,CAAC,CAACK,cAAF,GAD8B,CAE9B;AACA;;AACA,QAAIX,IAAI,KAAK,IAAb,EAAmB;AACf,UAAIF,eAAe,CAACH,QAAhB,KAA6B,QAA7B,IAAyCG,eAAe,CAACF,QAAhB,KAA6B,QAA1E,EAAoF;AAChFO,QAAAA,aAAa,CAAC,IAAD,CAAb;AACH,OAFD,MAEO;AACHA,QAAAA,aAAa,CAAC,KAAD,CAAb;AACAS,QAAAA,aAAa,CAAC,IAAD,CAAb;AACAR,QAAAA,OAAO,CAACS,IAAR,CAAa,GAAb;AACH;AACJ;AACJ,GAbD;;AAiBA,sBACI;AAAA,2BACI;AAAM,MAAA,QAAQ,EAAEH,kBAAhB;AAAoC,MAAA,SAAS,EAAC,MAA9C;AAAA,iBACKV,IAAI,CAACc,UAAL,KAAoB,IAApB,iBAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADjC,EAEKd,IAAI,CAACe,MAAL,KAAgB,IAAhB,iBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAF7B,eAGI;AACI,QAAA,WAAW,EAAC,UADhB;AAEI,QAAA,IAAI,EAAC,UAFT;AAGI,QAAA,KAAK,EAAC,UAHV;AAII,QAAA,IAAI,EAAC,MAJT;AAKI,QAAA,EAAE,EAAC,UALP;AAMI,QAAA,QAAQ,EAAEV,QANd;AAOI,QAAA,KAAK,EAAEP,eAAe,CAACH;AAP3B;AAAA;AAAA;AAAA;AAAA,cAHJ,eAYI;AACI,QAAA,WAAW,EAAC,UADhB;AAEI,QAAA,IAAI,EAAC,UAFT;AAGI,QAAA,KAAK,EAAC,UAHV;AAII,QAAA,IAAI,EAAC,UAJT;AAKI,QAAA,EAAE,EAAC,UALP;AAMI,QAAA,QAAQ,EAAEU,QANd;AAOI,QAAA,KAAK,EAAEP,eAAe,CAACF;AAP3B;AAAA;AAAA;AAAA;AAAA,cAZJ,eAqBI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cArBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA6BH;;GA5DuBC,K;UAKNL,U;;;KALMK,K","sourcesContent":["//1. User can create/register as a client and login with the registered credentials.\n// MARK\n\n//2. User can create/register as an instructor \n//by entering an additional Auth Code during signup, \n//and can login with the registered credentials.\nimport { useContext, useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { GlobalPropsContext } from '../GlobalPropsContext'\n\n\n// Initial log in form values\nconst initialLogInFormValues = { username: \"\", password: \"\" };\n\n\nexport default function Login() {\n    const [loginFormValues, setLogInFormValues] = useState(initialLogInFormValues);\n    const { user, setUser } = useContext(GlobalPropsContext);\n    const [loginError, setLoginError] = useState(false);\n\n    let history = useHistory();\n\n    const onChange = (e) => {\n        setLogInFormValues({\n            ...loginFormValues, [e.target.name]: e.target.value\n        })\n    }\n\n\n    const loginSubmitHandler = (e) => {\n        e.preventDefault();\n        // setIsLoading(true);\n        // console.log(isLoading);\n        if (user === true) {\n            if (loginFormValues.username !== \"lambda\" && loginFormValues.password !== \"school\") {\n                setLoginError(true);\n            } else {\n                setLoginError(false);\n                setIsLoggedIn(true);\n                history.push(\"/\")\n            }\n        }\n    }\n\n\n\n    return (\n        <div>\n            <form onSubmit={loginSubmitHandler} className=\"form\">\n                {user.instructor === true && <h1>What's Up Coach!</h1>}\n                {user.client === true && <h1>Let's Get Fit!</h1>}\n                <input\n                    placeholder=\"username\"\n                    name=\"username\"\n                    label=\"username\"\n                    type=\"text\"\n                    id=\"username\"\n                    onChange={onChange}\n                    value={loginFormValues.username}\n                />\n                <input\n                    placeholder=\"password\"\n                    name=\"password\"\n                    label=\"Password\"\n                    type=\"password\"\n                    id=\"password\"\n                    onChange={onChange}\n                    value={loginFormValues.password}\n                />\n                <button type=\"submit\">\n                    LogIn\n                </button>\n            </form>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}